from sklearn.neighbors import KNeighborsClassifier
from xgboost import XGBClassifier
import lightgbm as lgb
from sklearn.svm import SVC
#from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import RandomForestClassifier
def Classifiers():

  clf = {
  1 : XGBClassifier(n_estimators=10, max_depth=3),
  2 : XGBClassifier(n_estimators=20, max_depth=3),
  3 : XGBClassifier(n_estimators=30, max_depth=3),
  4 : XGBClassifier(n_estimators=40, max_depth=3),
  5 : XGBClassifier(n_estimators=50, max_depth=3),
  6 : XGBClassifier(n_estimators=100, max_depth=3),
  7 : XGBClassifier(n_estimators=200, max_depth=3),
  8 : XGBClassifier(n_estimators=10, max_depth=4),
  9 : XGBClassifier(n_estimators=20, max_depth=4),
  10 : XGBClassifier(n_estimators=30, max_depth=4),
  11 : XGBClassifier(n_estimators=40, max_depth=4),
  12 : XGBClassifier(n_estimators=50, max_depth=4),
  13 : XGBClassifier(n_estimators=100, max_depth=4),
  14 : XGBClassifier(n_estimators=200, max_depth=4),
  15 : XGBClassifier(n_estimators=10, max_depth=5),
  16 : XGBClassifier(n_estimators=20, max_depth=5),
  17 : XGBClassifier(n_estimators=30, max_depth=5),
  18 : XGBClassifier(n_estimators=40, max_depth=5),
  19 : XGBClassifier(n_estimators=50, max_depth=5),
  20 : XGBClassifier(n_estimators=100, max_depth=5),
  21 : XGBClassifier(n_estimators=200, max_depth=5),
  22 : KNeighborsClassifier(n_neighbors=5),
  23 : KNeighborsClassifier(n_neighbors=7),
  24 : KNeighborsClassifier(n_neighbors=9),
  25 : KNeighborsClassifier(n_neighbors=11),
  26 : RandomForestClassifier(n_estimators=10, max_depth=3,n_jobs=-1),
  27 : RandomForestClassifier(n_estimators=20, max_depth=3,n_jobs=-1),
  28 : RandomForestClassifier(n_estimators=30, max_depth=3,n_jobs=-1),
  29 : RandomForestClassifier(n_estimators=40, max_depth=3,n_jobs=-1),
  30 : RandomForestClassifier(n_estimators=50, max_depth=3,n_jobs=-1),
  31 : RandomForestClassifier(n_estimators=100, max_depth=3,n_jobs=-1),  
  32 : RandomForestClassifier(n_estimators=10, max_depth=4,n_jobs=-1),
  33 : RandomForestClassifier(n_estimators=20, max_depth=4,n_jobs=-1),
  34 : RandomForestClassifier(n_estimators=30, max_depth=4,n_jobs=-1),
  35 : RandomForestClassifier(n_estimators=40, max_depth=4,n_jobs=-1),
  36 : RandomForestClassifier(n_estimators=50, max_depth=4,n_jobs=-1),
  37 : RandomForestClassifier(n_estimators=100, max_depth=4,n_jobs=-1),
  38 : lgb.LGBMClassifier(n_estimators=10, max_depth=3),
  39 : lgb.LGBMClassifier(n_estimators=20, max_depth=3),
  40 : lgb.LGBMClassifier(n_estimators=30, max_depth=3),
  41 : lgb.LGBMClassifier(n_estimators=40, max_depth=3),
  42 : lgb.LGBMClassifier(n_estimators=50, max_depth=3),  
  43 : lgb.LGBMClassifier(n_estimators=10, max_depth=4),
  44 : lgb.LGBMClassifier(n_estimators=20, max_depth=4),
  45 : lgb.LGBMClassifier(n_estimators=30, max_depth=4),
  46 : lgb.LGBMClassifier(n_estimators=40, max_depth=4),
  47 : lgb.LGBMClassifier(n_estimators=50, max_depth=4),    
  48 : lgb.LGBMClassifier(n_estimators=10, max_depth=5),
  49 : lgb.LGBMClassifier(n_estimators=20, max_depth=5),
  50 : lgb.LGBMClassifier(n_estimators=30, max_depth=5),
  51 : lgb.LGBMClassifier(n_estimators=40, max_depth=5),
  52 : lgb.LGBMClassifier(n_estimators=50, max_depth=5),   
  53 : SVC(C=1,kernel='rbf', gamma='auto', max_iter=1000),
  54 : SVC(C=2,kernel='rbf', gamma='auto', max_iter=1000),
  55 : SVC(C=3,kernel='rbf', gamma='auto', max_iter=1000),
  56 : SVC(C=1,kernel='poly', gamma='auto', degree=3, max_iter=1000),
  57 : SVC(C=2,kernel='poly', gamma='auto', degree=3, max_iter=1000),
  58 : SVC(C=3,kernel='poly', gamma='auto', degree=3, max_iter=1000),
  59 : SVC(C=1,kernel='poly', gamma='auto', degree=4, max_iter=1000),
  60 : SVC(C=2,kernel='poly', gamma='auto', degree=4, max_iter=1000),
  61 : SVC(C=3,kernel='poly', gamma='auto', degree=4, max_iter=1000),
  62 : SVC(C=1,kernel='poly', gamma='auto', degree=5, max_iter=1000),
  63 : SVC(C=2,kernel='poly', gamma='auto', degree=5, max_iter=1000),
  64 : SVC(C=3,kernel='poly', gamma='auto', degree=5, max_iter=1000),
  65 : SVC(C=1,kernel='poly', gamma='auto', degree=6, max_iter=1000),
  66 : SVC(C=2,kernel='poly', gamma='auto', degree=6, max_iter=1000),
  67 : SVC(C=3,kernel='poly', gamma='auto', degree=6, max_iter=1000),
  68 : SVC(C=1,kernel='poly', gamma='auto', degree=7, max_iter=1000),
  69 : SVC(C=2,kernel='poly', gamma='auto', degree=7, max_iter=1000),
  70 : SVC(C=3,kernel='poly', gamma='auto', degree=7, max_iter=1000),


  71 : XGBClassifier(n_estimators=200, max_depth=5),
  72 : XGBClassifier(n_estimators=300, max_depth=5),
  73 : XGBClassifier(n_estimators=400, max_depth=5),
  74 : XGBClassifier(n_estimators=200, max_depth=10),
  75 : XGBClassifier(n_estimators=300, max_depth=10),
  76 : XGBClassifier(n_estimators=400, max_depth=10),  
  77 : lgb.LGBMClassifier(n_estimators=200, max_depth=5),
  78 : lgb.LGBMClassifier(n_estimators=300, max_depth=5),
  79 : lgb.LGBMClassifier(n_estimators=400, max_depth=5),
  80 : lgb.LGBMClassifier(n_estimators=200, max_depth=10),
  81 : lgb.LGBMClassifier(n_estimators=300, max_depth=10),
  82 : lgb.LGBMClassifier(n_estimators=400, max_depth=10),
  83 : KNeighborsClassifier(n_neighbors=5),
  84 : KNeighborsClassifier(n_neighbors=7),
  85 : KNeighborsClassifier(n_neighbors=9),
  86 : KNeighborsClassifier(n_neighbors=11),
  87 : KNeighborsClassifier(n_neighbors=13),
  
#  8 : XGBClassifier(n_estimators=300, max_depth=3),
#  9 : XGBClassifier(n_estimators=400, max_depth=3),
#  10 : XGBClassifier(n_estimators=500, max_depth=3),
#  11 : XGBClassifier(n_estimators=1000, max_depth=3),
#  12 : XGBClassifier(n_estimators=2000, max_depth=3),
#  13 : XGBClassifier(n_estimators=2500, max_depth=3),

#  22 : XGBClassifier(n_estimators=400, max_depth=4),
#  23 : XGBClassifier(n_estimators=500, max_depth=4),
#  24 : XGBClassifier(n_estimators=1000, max_depth=4),
#  25 : XGBClassifier(n_estimators=2000, max_depth=4),
#  26 : XGBClassifier(n_estimators=2500, max_depth=4),

#  35 : XGBClassifier(n_estimators=400, max_depth=5),
#  36 : XGBClassifier(n_estimators=500, max_depth=5),
#  37 : XGBClassifier(n_estimators=1000, max_depth=5),
#  38 : XGBClassifier(n_estimators=2000, max_depth=5),
#  39 : XGBClassifier(n_estimators=2500, max_depth=5),
  
  
  
#  6 : KNeighborsClassifier(n_neighbors=5),
#  7 : KNeighborsClassifier(n_neighbors=7),
#  8 : KNeighborsClassifier(n_neighbors=9),
#  9 : KNeighborsClassifier(n_neighbors=11),
#  10 : KNeighborsClassifier(n_neighbors=13),
#  11 : RandomForestClassifier(n_estimators=4000, max_depth=16,n_jobs=-1),
#  12 : RandomForestClassifier(n_estimators=4500, max_depth=20,n_jobs=-1),
#  13 : RandomForestClassifier(n_estimators=5000, max_depth=22,n_jobs=-1),
#  14 : RandomForestClassifier(n_estimators=3500, max_depth=20,n_jobs=-1),
#  15 : RandomForestClassifier(n_estimators=3000, max_depth=20,n_jobs=-1),
#  16 : lgb.LGBMClassifier(n_estimators=4000, max_depth=3),
#  17 : lgb.LGBMClassifier(n_estimators=4500, max_depth=4),
#  18 : lgb.LGBMClassifier(n_estimators=3500, max_depth=5),
#  19 : lgb.LGBMClassifier(n_estimators=3000, max_depth=4),
#  20 : lgb.LGBMClassifier(n_estimators=5000, max_depth=3)
  }
  
  return clf